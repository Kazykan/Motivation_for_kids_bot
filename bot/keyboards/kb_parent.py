
from aiogram import types
from aiogram.utils.keyboard import InlineKeyboardBuilder
from bot.cbdata import ChildCallbackFactory
from db_service.dbservice import is_parent_in_db
from db_service.pydantic_model import Parent_base_and_child
from db_service.service import get_child_gender_emoji



def kb_share_phone() -> types.KeyboardButton:
    button_phone = [[types.KeyboardButton(text="–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º ‚òéÔ∏è", request_contact=True)]]
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True,
        input_field_placeholder='–ù–∞–∂–º–∏—Ç–µ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º...',
        keyboard=button_phone)
    return keyboard



def ikb_parent_children(bot_user_id):
    """–ö–Ω–æ–ø–∫–∞ —Å–æ —Å–ø–∏—Å–∫–æ–º –¥–µ—Ç–µ–π + –¥–æ–±–∞–≤–∏—Ç—å –µ—â–µ –æ–¥–Ω–æ–≥–æ —Ä–µ–±–µ–Ω–∫–∞"""
    parent_data = is_parent_in_db(bot_user_id) # –ü–æ–ª—É—á–µ–º –µ–≥–æ –¥–∞–Ω–Ω—ã–µ
    data = Parent_base_and_child.validate(parent_data)
    builder = InlineKeyboardBuilder()
    row = []
    for child in data.children:
        builder.button(text=f'{child.name} {get_child_gender_emoji(child.sex)}',
            callback_data=ChildCallbackFactory(id=child.id))
        row.append(1)
    row.append(2)
    builder.button(text='–î–æ–± —Ä–µ–±–µ–Ω–∫–∞ üê∞', callback_data='cb_add_child') #TODO: –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –∫–Ω–æ–ø–∫—É
    builder.button(text='–î–æ–± —Ä–æ–¥–∏—Ç–µ–ª—è üêª', callback_data='cb_add_one_more_parent')  
    builder.adjust(*row)
    return builder.as_markup()