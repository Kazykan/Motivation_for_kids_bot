from aiogram.utils.keyboard import InlineKeyboardBuilder

from bot.cbdata import ActivityCallbackFactory, BaseChildCFactory, TickChangeActivityCFactory
from db_service.dbservice import ChildDB, get_weekly_navigation_arrows
from db_service.pydantic_model import Activity_serialize


def ikb_activity_tick(activity_id: int, day=False):
    """–û–¥–Ω–æ –∑–∞–¥–∞–Ω–∏–µ –ø–æ –¥–Ω—è–º –Ω–µ–¥–µ–ª–∏ –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ—Ç–º–µ—Ç–∏—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ –¥–Ω—è–º"""
    activity = Activity_serialize.validate(
        ChildDB.get_activity_one(activity_id=activity_id, day=day))
    builder = InlineKeyboardBuilder()
    # –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –¥–∞—Ç–µ
    days = sorted(activity.activity_days, key=lambda x: x.day)
    row = []
    for one_day in days:
        if one_day.is_done:
            is_done = '‚úÖ'
        else:
            is_done = '‚ùå'
        builder.button(
            text=f'{one_day.day.strftime("%a %d %b")} {is_done}',
            callback_data='cb_activity_day_one'
            )
        builder.button(
            text='–∏–∑–º–µ–Ω–∏—Ç—å üîÑ',
            callback_data=TickChangeActivityCFactory(
                activity_day_id=one_day.id))
        row.append(2)

    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ –ø—Ä–µ–¥. –Ω–µ–¥–µ–ª—è–º –µ—Å–ª–∏ –µ—Å—Ç—å –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏
    navigation_button = get_weekly_navigation_arrows(
        child_id=activity.child_id,
        day=day
        )
    if navigation_button:  # –ï—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–µ–¥. –¥–Ω–∏ –Ω–µ–¥–µ–ª–∏ –¥–æ–±. –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        for button in navigation_button:
            builder.button(
                text=button['text'],
                callback_data=ActivityCallbackFactory(
                    activity_id=activity_id,
                    tick='yes',
                    day=button['day'])
                )
        # –±–µ—Ä–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–æ–ø–æ–∫ –∏–∑ –∫–ª—é—á–∞ –ø–µ—Ä–≤–æ–≥–æ –ø–æ —Å–ø–∏—Å–∫—É –∑–Ω–∞—á–µ–Ω–∏–π
        row.append(navigation_button[0]['row'])
    builder.button(
        text='–ü–µ—Ä–µ–π—Ç–∏ —Å–ø–∏—Å–∫—É –∑–∞–¥–∞–Ω–∏–π',
        callback_data=BaseChildCFactory(id=activity.child_id, day=False))
    row.append(1)
    builder.adjust(*row)
    return builder.as_markup()
